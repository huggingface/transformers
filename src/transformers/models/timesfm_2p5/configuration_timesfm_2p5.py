#                ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨
#           This file was automatically generated from src/transformers/models/timesfm_2p5/modular_timesfm_2p5.py.
#               Do NOT edit this file manually as any edits will be overwritten by the generation of
#             the file from the modular. If any change should be done, please apply the change to the
#                          modular_timesfm_2p5.py file directly. One of our CI enforces this.
#                ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨
# coding=utf-8
# Copyright 2025 the HuggingFace Team. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


from ...configuration_utils import PretrainedConfig


class Timesfm2P5Config(PretrainedConfig):
    """
    This is the configuration class to store the configuration of a [`Timesfm2P5ModelForPrediction`]. It is used to
    instantiate a TimesFM 2.5 model according to the specified arguments, defining the model architecture. Instantiating a
    configuration with the defaults will yield a similar configuration to that of the TimesFM 2.5
    [google/timesfm-2.5-200m-pytorch](https://huggingface.co/google/timesfm-2.5-200m-pytorch) architecture.

    Configuration objects inherit from [`TimesFmConfig`] and can be used to control the model outputs. Read the
    documentation from [`TimesFmConfig`] for more information.

    Args:
            patch_length (`int`, *optional*, defaults to 32): <fill_docstring>
            context_length (`int`, *optional*, defaults to 512): <fill_docstring>
            horizon_length (`int`, *optional*, defaults to 128): <fill_docstring>
            freq_size (`int`, *optional*, defaults to 3): <fill_docstring>
            num_hidden_layers (`int`, *optional*, defaults to 50): <fill_docstring>
            hidden_size (`int`, *optional*, defaults to 1280): <fill_docstring>
            intermediate_size (`int`, *optional*, defaults to 1280): <fill_docstring>
            head_dim (`int`, *optional*, defaults to 80): <fill_docstring>
            num_attention_heads (`int`, *optional*, defaults to 16): <fill_docstring>
            tolerance (`float`, *optional*, defaults to 1e-06): <fill_docstring>
            rms_norm_eps (`float`, *optional*, defaults to 1e-06): <fill_docstring>
            quantiles (`list`, *optional*, defaults to `[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]`): <fill_docstring>
            pad_val (`float`, *optional*, defaults to 1123581321.0): <fill_docstring>
            attention_dropout (`float`, *optional*, defaults to 0.0): <fill_docstring>
            use_positional_embedding (`bool`, *optional*, defaults to `False`): <fill_docstring>
            initializer_range (`float`, *optional*, defaults to 0.02): <fill_docstring>
            min_timescale (`int`, *optional*, defaults to 1): <fill_docstring>
            max_timescale (`int`, *optional*, defaults to 10000): <fill_docstring>
            use_rotary_position_embeddings (`bool`, *optional*, defaults to `True`):
                Whether to use rotary positional embeddings instead of traditional sinusoidal embeddings.
            use_revin_normalization (`bool`, *optional*, defaults to `True`):
                Whether to use reversible instance normalization (RevIN) for input preprocessing.
    """

    model_type = "timesfm_2p5"
    keys_to_ignore_at_inference = []
    is_encoder_decoder = False

    def __init__(
        self,
        patch_length: int = 32,
        context_length: int = 512,
        horizon_length: int = 128,
        freq_size: int = 3,
        num_hidden_layers: int = 50,
        hidden_size: int = 1280,
        intermediate_size: int = 1280,
        head_dim: int = 80,
        num_attention_heads: int = 16,
        tolerance: float = 1e-6,
        rms_norm_eps: float = 1e-6,
        quantiles: list[float] = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
        pad_val: float = 1123581321.0,
        attention_dropout: float = 0.0,
        use_positional_embedding: bool = False,
        initializer_range: float = 0.02,
        min_timescale: int = 1,
        max_timescale: int = 10_000,
        use_rotary_position_embeddings: bool = True,
        use_revin_normalization: bool = True,
        **kwargs,
    ):
        super().__init__(
            is_encoder_decoder=self.is_encoder_decoder,
            **kwargs,
        )
        # TimesFM 2.5 specific parameters
        self.use_rotary_position_embeddings = use_rotary_position_embeddings
        self.use_revin_normalization = use_revin_normalization
        self.patch_length = patch_length
        self.context_length = context_length
        self.horizon_length = horizon_length
        self.quantiles = quantiles
        self.pad_val = pad_val
        self.freq_size = freq_size
        self.hidden_size = hidden_size
        self.intermediate_size = intermediate_size
        self.head_dim = head_dim
        self.num_hidden_layers = num_hidden_layers
        self.num_attention_heads = num_attention_heads
        self.tolerance = tolerance
        self.rms_norm_eps = rms_norm_eps
        self.attention_dropout = attention_dropout
        self.use_positional_embedding = use_positional_embedding
        self.initializer_range = initializer_range
        self.min_timescale = min_timescale
        self.max_timescale = max_timescale


__all__ = ["Timesfm2P5Config"]
