#                ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨
#           This file was automatically generated from src/transformers/models/llava_onevision1_5/modular_llava_onevision1_5.py.
#               Do NOT edit this file manually as any edits will be overwritten by the generation of
#             the file from the modular. If any change should be done, please apply the change to the
#                          modular_llava_onevision1_5.py file directly. One of our CI enforces this.
#                ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨ðŸš¨
# coding=utf-8
# Copyright 2025 the HuggingFace Inc. team. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from typing import Any, Optional

from ...configuration_utils import PretrainedConfig
from ..auto import CONFIG_MAPPING, AutoConfig


# ------------------------- Configurations -------------------------


class RiceConfig(PretrainedConfig):
    model_type = "rice_vit"
    base_config_key = "vision_config"

    def __init__(
        self,
        depth=24,
        hidden_size=1024,
        hidden_act="gelu",
        intermediate_size=4096,
        num_heads=16,
        in_channels=3,
        patch_size=14,
        spatial_merge_size=2,
        temporal_patch_size=1,
        initializer_range=0.02,
        layer_norm_eps=1e-05,
        text_hidden_size=2560,
        attn_implementation="sdpa",
        attention_dropout=0.0,
        **kwargs,
    ):
        super().__init__(**kwargs)

        self.depth = depth
        self.hidden_size = hidden_size
        self.hidden_act = hidden_act
        self.intermediate_size = intermediate_size
        self.num_heads = num_heads
        self.in_channels = in_channels
        self.patch_size = patch_size
        self.spatial_merge_size = spatial_merge_size
        self.temporal_patch_size = temporal_patch_size
        self.initializer_range = initializer_range
        self.layer_norm_eps = layer_norm_eps
        self.text_hidden_size = text_hidden_size
        self.attention_dropout = attention_dropout
        self.attn_implementation = attn_implementation


class LlavaOnevision1_5Config(PretrainedConfig):
    r"""
    This is the configuration class to store the configuration of a `LlavaOnevision1_5` model.
    [Deep-VLM/LLaVA-OneVision-1.5-8B-Instruct-hf](https://huggingface.co/Deep-VLM/LLaVA-OneVision-1.5-8B-Instruct-hf) architecture.

    Args:
        vision_config (`RiceConfig` or `dict`):
            Vision tower config. If a dict is provided, it will be passed to `RiceConfig`.
        text_config (`Qwen3Config` or `dict`):
            Language model config. If a dict is provided, it will be passed to the text config class used by `AutoModel`.
        image_token_id (`int`, *optional*, defaults to `151655`):
            The special token id in `input_ids` used as a placeholder for image features.
        video_token_id (`int`, *optional*, defaults to `151656`):
            The special token id in `input_ids` used as a placeholder for video features.
        vision_start_token_id (`int`, *optional*, defaults to `151657`):
            The token id that precedes a vision placeholder token to mark the start of a vision segment.
        vocab_size (`int`, *optional*, defaults to `152064`):
            Vocabulary size of the language model. Defines the number of different tokens that can be represented by the
            `input_ids` passed when calling [`~PreTrainedModel`]. Vocabulary size of the model. Defines the number of
            different tokens that can be represented by the `input_ids` passed to the model.
        **kwargs:
            Additional keyword arguments passed to `PretrainedConfig`.
    """

    model_type = "llava_onevision1_5"
    sub_configs = {"vision_config": RiceConfig, "text_config": AutoConfig}
    keys_to_ignore_at_inference = ["past_key_values"]

    def __init__(
        self,
        vision_config: Optional[dict] = None,
        text_config: Optional[dict] = None,
        image_token_id: int = 151655,
        video_token_id: int = 151656,
        vision_start_token_id: Optional[int] = None,
        vocab_size: int = 152064,
        **kwargs,
    ):
        # Vision
        if isinstance(vision_config, dict):
            self.vision_config = self.sub_configs["vision_config"](**vision_config)
        elif vision_config is None:
            self.vision_config = self.sub_configs["vision_config"]()

        # Text
        if isinstance(text_config, dict):
            self.text_config = CONFIG_MAPPING[text_config["model_type"]](**text_config)
        elif text_config is None:
            self.text_config = CONFIG_MAPPING["qwen3"](**kwargs)

        self.image_token_id = image_token_id
        self.video_token_id = video_token_id
        self.vision_start_token_id = vision_start_token_id
        self.vocab_size = vocab_size

        super().__init__(**kwargs)

    # Helpers expected by many model implementations
    def get_text_config(self, decoder=True) -> Any:
        return self.text_config

    def get_vision_config(self) -> RiceConfig:
        return self.vision_config


__all__ = ["LlavaOnevision1_5Config"]
